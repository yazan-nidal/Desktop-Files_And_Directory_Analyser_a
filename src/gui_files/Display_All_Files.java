/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui_files;

import java.awt.Color;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFileChooser;

/**
 *
 * @author ads
 */
public class Display_All_Files extends javax.swing.JFrame {

    /**
     * Creates new form Display_All_Files
     */
    public Display_All_Files() {
        initComponents();
    }
    
    
    public int n_dirs(File [] file)
    {
        int count =0;
        for(int i=0; i< file.length;i++)
        {
            if(file[i].isDirectory())
                count++;
        }
        return count;
    }
    
    public int n_files(File [] file)
    {
        int count =0;
    if(file!= null)
    {
        for(int i=0; i< file.length;i++)
        {
            if(file[i].isFile())
                count++;
        }
    }
        return count;
    }
    
    
   public File [] dirs(File file)
   {
       if(n_files(file.listFiles()) != 0 || file.isFile())      // executs only if its a file or a directory and contains files !!
       area.append("\n Permissions  \tIsHidden  \tSize  \tlast Modified\t\tName\n");
       
       File [] new_dirs = null;
       
       if(file.isFile())
           print(file);
       else
       {
       
       File [] list = file.listFiles();
       new_dirs=  new File[n_dirs(list)];
       int b=0;
       for(int i=0; i< list.length; i++)
       {
           if(list[i].isFile())
               print(list[i]);
           
           else if(list[i].isDirectory())
               new_dirs[b++] = list[i];
       }
       
       }

              return new_dirs;
   }
    
   
   public void print(File file)
   {
       SimpleDateFormat date = new SimpleDateFormat("MM/dd/yyyy hh:mm:ss");
                area.append(" " + ((file.canRead() == true) ? "r" : "-")
                             + ((file.canWrite() == true) ? "w" : "-") 
                             + ((file.canExecute() == true) ? "x" : "-") + "\t"
                             + ((file.isHidden() == true) ? "YES" : "NO")   + "\t"
                             + (file.length()) + "b" + "\t"
                             + (date.format(file.lastModified())) + "\t"
                             + (file.getName()) + "\n");
                
   }
   
    public void listss(File file)
    {
        
        if(file == null)
            return;
        
        if(file.isFile())
            dirs(file);
        
        else if(file.isDirectory())
        {
            area.append("\n\n" + file.getPath());
            area.append("\n--------------------------------------------------"
                      + "----------------------------------------------------"
                      + "----------------------------------------------------"
                      + "----------");
            File [] litt = dirs(file);
            if(file.listFiles().length == 0)
                area.append("\n\t\t\tDirectory Is Empty..");
           
            for(int i =0; i< litt.length;i++)
            {
                listss(litt[i]);
            }
        }
        
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        clear = new javax.swing.JButton();
        open = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        selected_file = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        area.setBackground(new java.awt.Color(0, 51, 102));
        area.setColumns(20);
        area.setFont(new java.awt.Font("Ebrima", 1, 16)); // NOI18N
        area.setForeground(new java.awt.Color(255, 255, 255));
        area.setRows(5);
        jScrollPane1.setViewportView(area);

        clear.setBackground(new java.awt.Color(153, 153, 255));
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setMnemonic('c');
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        open.setBackground(new java.awt.Color(0, 153, 0));
        open.setForeground(new java.awt.Color(255, 255, 255));
        open.setMnemonic('e');
        open.setText("Open");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });

        cancel.setBackground(new java.awt.Color(255, 0, 0));
        cancel.setForeground(new java.awt.Color(255, 255, 255));
        cancel.setMnemonic('n');
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        selected_file.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        selected_file.setText("Please Select A File Or Dierctory...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selected_file, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(open, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 665, Short.MAX_VALUE)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(selected_file, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(open, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        
        clear.doClick();
        
        File file;
        JFileChooser choose = new JFileChooser();
        choose.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        
        int x = choose.showOpenDialog(null);
        
        if(x == JFileChooser.APPROVE_OPTION)
        {
        file = choose.getSelectedFile();
        selected_file.setText(((file.isDirectory() == true) ? "Directory" : "File")
                                +  " " + "Selected --> " + file.getName());
        listss(file);
        }
        
        else
        {
            selected_file.setText("Something wrong happened...");
            selected_file.setForeground(Color.RED);
        }
    }//GEN-LAST:event_openActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        area.setText("");
        selected_file.setText("");
    }//GEN-LAST:event_clearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Display_All_Files.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Display_All_Files.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Display_All_Files.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Display_All_Files.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Display_All_Files().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JButton cancel;
    private javax.swing.JButton clear;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton open;
    private javax.swing.JLabel selected_file;
    // End of variables declaration//GEN-END:variables
}
